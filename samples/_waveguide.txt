# _waveguide

GLOBAL_O = V2((35.6, 39.0260))		# ORIGIN = BOTTOM LEFT
TR = V2((21.6566, 25.0))		# TOP RIGHT


## PREVIOUSLY WRITTEN


## NEW COMMANDS

LOCAL_O = V2((0, 10))

move_to(V2((-1,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,0)))
write_part_circle(V2((0,0)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.1)))
write_part_circle(V2((0,-0.1)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.2)))
write_part_circle(V2((0,-0.2)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.3)))
write_part_circle(V2((0,-0.3)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.4)))
write_part_circle(V2((0,-0.4)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.5)))
write_part_circle(V2((0,-0.5)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.6)))
write_part_circle(V2((0,-0.6)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.7)))
write_part_circle(V2((0,-0.7)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.8)))
write_part_circle(V2((0,-0.8)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-0.9)))
write_part_circle(V2((0,-0.9)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.0)))
write_part_circle(V2((0,-1.0)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.1)))
write_part_circle(V2((0,-1.1)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.2)))
write_part_circle(V2((0,-1.2)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.3)))
write_part_circle(V2((0,-1.3)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.4)))
write_part_circle(V2((0,-1.4)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.5)))
write_part_circle(V2((0,-1.5)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.6)))
write_part_circle(V2((0,-1.6)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.7)))
write_part_circle(V2((0,-1.7)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.8)))
write_part_circle(V2((0,-1.8)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-1.9)))
write_part_circle(V2((0,-1.9)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.0)))
write_part_circle(V2((0,-2.0)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.1)))
write_part_circle(V2((0,-2.1)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.2)))
write_part_circle(V2((0,-2.2)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.3)))
write_part_circle(V2((0,-2.3)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.4)))
write_part_circle(V2((0,-2.4)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.5)))
write_part_circle(V2((0,-2.5)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.6)))
write_part_circle(V2((0,-2.6)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.7)))
write_part_circle(V2((0,-2.7)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.8)))
write_part_circle(V2((0,-2.8)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-2.9)))
write_part_circle(V2((0,-2.9)), 1, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((1.2,2.2)))
move_to(V2((1.2,-3.0)))
write_part_circle(V2((0,-3.0)), 1, 0, 90, 0.6)
move_to(V2((-0.2,-3.0)))
move_to(V2((-0.2,2.2)))


LOCAL_O = V2((2, 10))

move_to(V2((2.2,2.2)))
move_to(V2((2.2,0)))
write_part_circle(V2((0,0)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.1)))
write_part_circle(V2((0,-0.1)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.2)))
write_part_circle(V2((0,-0.2)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.3)))
write_part_circle(V2((0,-0.3)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.4)))
write_part_circle(V2((0,-0.4)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.5)))
write_part_circle(V2((0,-0.5)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.6)))
write_part_circle(V2((0,-0.6)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.7)))
write_part_circle(V2((0,-0.7)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.8)))
write_part_circle(V2((0,-0.8)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-0.9)))
write_part_circle(V2((0,-0.9)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.0)))
write_part_circle(V2((0,-1.0)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.1)))
write_part_circle(V2((0,-1.1)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.2)))
write_part_circle(V2((0,-1.2)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.3)))
write_part_circle(V2((0,-1.3)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.4)))
write_part_circle(V2((0,-1.4)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.5)))
write_part_circle(V2((0,-1.5)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.6)))
write_part_circle(V2((0,-1.6)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.7)))
write_part_circle(V2((0,-1.7)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.8)))
write_part_circle(V2((0,-1.8)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-1.9)))
write_part_circle(V2((0,-1.9)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.0)))
write_part_circle(V2((0,-2.0)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.1)))
write_part_circle(V2((0,-2.1)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.2)))
write_part_circle(V2((0,-2.2)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.3)))
write_part_circle(V2((0,-2.3)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.4)))
write_part_circle(V2((0,-2.4)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.5)))
write_part_circle(V2((0,-2.5)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.6)))
write_part_circle(V2((0,-2.6)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.7)))
write_part_circle(V2((0,-2.7)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.8)))
write_part_circle(V2((0,-2.8)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-2.9)))
write_part_circle(V2((0,-2.9)), 2, 0, 90, 0.6)
move_to(V2((0,2.2)))
move_to(V2((2.2,2.2)))
move_to(V2((2.2,-3.0)))
write_part_circle(V2((0,-3.0)), 2, 0, 90, 0.6)



## REFERENCE
# “start”, “end”, and “center” must be defined as V2 objects, e.g., V2((0.5, 0.5))

# write_parallel_lines_gap(z, start, end, gap, speed, num_lines)
# write_parallel_lines_vertical_continuous(z, start, end, gap, speed)
# write_parallel_lines_horizontal_continuous(z, start, end, gap, speed)
# write_parallel_lines_vertical_region_tall(z, speeds, gap, inter_speed_gap_factor = 0.2)
# write_parallel_lines_horizontal_region_wide(z, speeds, gap, inter_speed_gap_factor = 0.2)
# write_parallel_lines_horizontal_const_height(z, x_width, speeds, gap, inter_speed_gap_factor = 0.2)
# write_parallel_lines_delta_s(z, start, end, gap, speed, delta_speed, num_lines_per_speed, num_speeds)
# write_line(start, end, speed)
# write_circle(center, radius, speed)
# write_part_circle(center, radius, start_deg, end_deg, speed)		# NEED TO CONFIRM ANGULAR WRITE DIRECTION
# outline_region(z, speed = None)
# wipe_region(z, gap = 0.08, speed = None)
# move_to(point, ground_speed = None, laser_on = False)			# will always render with laser_on = False
# home_all()
